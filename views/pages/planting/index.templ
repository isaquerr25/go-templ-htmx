package planting

import (
"fmt"
"github.com/isaquerr25/go-templ-htmx/views/templates"
)

type TypeProductProps struct {
ID uint
Name string
}

type PlantingProps struct {
ID uint
TypePoductID uint `form:"typeProdutcId"`

CropName string `form:"cropName"`
StartedAt string `form:"startedAt"` // no formato yyyy-mm-dd
EndedAt string `form:"endedAt"` // no formato yyyy-mm-dd ou vazio
IsCompleted bool `form:"isCompleted"`
AreaUsed float64 `form:"areaUsed"`
Error map[string]string
}

templ Index(p PlantingProps, typeProducts []TypeProductProps) {
@templates.Base() {
<div class="max-w-[50rem] mx-auto mt-[5rem]">
	<h1 class="text-xl font-bold mb-4">
		if p.ID == 0 {
		Novo Plantio
		} else {
		"Editar Plantio"
		}
	</h1>
	<form if p.ID !=0 { hx-post={ fmt.Sprintf("/plantings/update/%d", p.ID) } } else { hx-post="/plantings/create" }
		hx-target="main" hx-select="main" hx-swap="outerHTML" class="space-y-4">
		<!-- Nome da Cultura -->
		<div>
			<label for="cropName" class="block font-medium">Nome da Cultura</label>
			<input type="text" id="cropName" name="cropName" value={ p.CropName } required
				class="w-full p-2 border rounded" placeholder="Ex: Milho" />
			if e, ok := p.Error["CropName"]; ok {
			<p class="text-red-500">{ e }</p>
			}
		</div>
		<!-- Data de Início -->
		<div>
			<label for="startedAt" class="block font-medium">Data de Início</label>
			<input type="date" id="startedAt" name="startedAt" value={ p.StartedAt } required
				class="w-full p-2 border rounded" />
			if e, ok := p.Error["StartedAt"]; ok {
			<p class="text-red-500">{ e }</p>
			}
		</div>
		<!-- Data de Término -->
		<div>
			<label for="endedAt" class="block font-medium">Data de Término</label>
			<input type="date" id="endedAt" name="endedAt" value={ p.EndedAt } class="w-full p-2 border rounded" />
			if e, ok := p.Error["EndedAt"]; ok {
			<p class="text-red-500">{ e }</p>
			}
		</div>
		<!-- Plantio Finalizado -->
		<div class="flex items-center space-x-2">
			<input type="checkbox" id="isCompleted" name="isCompleted" if p.IsCompleted { checked } />
			<label for="isCompleted" class="select-none">Plantio Finalizado</label>
		</div>
		<!-- Área Utilizada -->
		<div>
			<label for="areaUsed" class="block font-medium">Área Utilizada (ha)</label>
			<input type="number" step="0.01" id="areaUsed" name="areaUsed" value={ fmt.Sprintf("%.2f", p.AreaUsed) }
				required class="w-full p-2 border rounded" placeholder="Ex: 2.50" />
			if e, ok := p.Error["AreaUsed"]; ok {
			<p class="text-red-500">{ e }</p>
			}
		</div>
		<!-- Tipo de Produto -->
		<div>
			<label for="typeProdutcId" class="block font-medium">Tipo de Produto</label>
			<select id="typeProdutcId" name="typeProdutcId" required class="w-full p-2 border rounded">
				<option value="">Selecione um tipo</option>
				for _, f := range typeProducts {
				<option value={ fmt.Sprintf("%d", f.ID) } selected={ f.ID==p.TypePoductID }>
					{ f.Name }
				</option>
				}
			</select>
		</div>
		<!-- Botões -->
		<button type="submit" class="w-full bg-blue-500 text-white p-2 rounded">
			if p.ID == 0 {
			Cadastrar
			} else {
			Atualizar
			}
		</button>
		if p.ID != 0 {
		<button type="button" hx-delete={ fmt.Sprintf("/plantings/delete/%d", p.ID) }
			hx-confirm="Deseja excluir este plantio?" hx-target="main" hx-swap="outerHTML"
			class="w-full bg-red-500 text-white p-2 rounded">
			Remover
		</button>
		}
	</form>
</div>
}
}
