package harvest

import (
"fmt"
"github.com/isaquerr25/go-templ-htmx/views/templates"
)

type HarvestProps struct {
ID uint
PlantingID uint
HarvestedAt string // formatado como YYYY-MM-DD para o input date
Quantity float64
Unit string
SaleValue float64
Error map[string]string
}

type HarvestListProps struct {
Items []HarvestProps
}

templ Index(p HarvestProps) {
@templates.Base() {
<div class="max-w-[50rem] mx-auto mt-[5rem]">
	<h1 class="text-xl font-bold mb-4">Cadastro de Colheita</h1>
	<form if p.ID !=0 { hx-post={ fmt.Sprintf("/harvest/update/%d", p.ID) } } else { hx-post="/harvest/create" }
		hx-target="main" hx-select="main" hx-swap="outerHTML" class="space-y-4">
		<input value={ fmt.Sprintf("%d", p.PlantingID) } type="number" name="plantingId" placeholder="ID do Plantio"
			class="w-full p-2 border rounded" />
		<input value={ p.HarvestedAt } type="date" name="harvestedAt" class="w-full p-2 border rounded" />
		<input value={ fmt.Sprintf("%.2f", p.Quantity) } type="number" step="0.01" name="quantity"
			placeholder="Quantidade" class="w-full p-2 border rounded" />
		<input value={ p.Unit } type="text" name="unit" placeholder="Unidade (ex: kg)"
			class="w-full p-2 border rounded" />
		<input value={ fmt.Sprintf("%.2f", p.SaleValue) } type="number" step="0.01" name="saleValue"
			placeholder="Valor de Venda" class="w-full p-2 border rounded" />
		<button type="submit" class="w-full bg-blue-500 text-white p-2 rounded">
			if p.ID == 0 {
			Cadastrar
			} else {
			Atualizar
			}
		</button>
	</form>
</div>
}
}

templ List(props HarvestListProps) {
@templates.Base() {
<div class="container mx-auto p-4">
	<h1 class="text-2xl font-bold mb-4">Lista de Colheitas</h1>
	<table class="w-full table-auto border-collapse border border-gray-300">
		<thead>
			<tr class="bg-gray-100">
				<th class="border border-gray-300 p-2">ID</th>
				<th class="border border-gray-300 p-2">Plantio</th>
				<th class="border border-gray-300 p-2">Data da Colheita</th>
				<th class="border border-gray-300 p-2">Quantidade</th>
				<th class="border border-gray-300 p-2">Unidade</th>
				<th class="border border-gray-300 p-2">Valor da Venda</th>
			</tr>
		</thead>
		<tbody>
			for _,item := range props.Items {
			<tr class="border-t border-gray-300">
				<td class="border border-gray-300 p-2">{ item.ID }</td>
				<td class="border border-gray-300 p-2">{ item.PlantingID }</td>
				<td class="border border-gray-300 p-2">{ item.HarvestedAt }</td>
				<td class="border border-gray-300 p-2">{ item.Quantity }</td>
				<td class="border border-gray-300 p-2">{ item.Unit }</td>
				<td class="border border-gray-300 p-2">R$ { item.SaleValue }</td>
			</tr>
			}
		</tbody>
	</table>
</div>
}
}
